<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>z80</string>
		<string>z80h</string>
		<string>asm</string>
		<string>inc</string>
	</array>
	<key>name</key>
		<string>z80Asm-ti</string>
	<key>patterns</key>
	<array>
		<!--<dict>
			<key>comment</key>
				<string>Bad temporary label (not only numeric)</string>
			<key>match</key>
				<string>^[0-9]+[^0-9\s:].*$</string>
			<key>name</key>
				<string>invalid.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Bad line (not begin from label, space, dot or comment)</string>
			<key>match</key>
				<string>^[^a-zA-Z0-9_.;@#/ \t\r\n].*$</string>
			<key>name</key>
				<string>invalid.z80</string>
		</dict>-->
		<dict>
			<key>comment</key>
				<string>Special case: conditional call/jmp</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
				<key>name</key>
					<string>command.z80</string>
				</dict>
				<key>2</key>
				<dict>
				<key>name</key>
					<string>flag.z80</string>
				</dict>
				<key>3</key>
				<dict>
				<key>name</key>
					<string>label.z80</string>
				</dict>
			</dict>
			<key>match</key>
				<string>(?i)(?&lt;=\s|:)(call|jp|jr)\s+(?:(z|nz|c|nc|po|pe|p|m)\s*,\s*)?((?:[a-zA-Z_.@$][a-zA-Z_.0-9]*)|[0-9]+(?:b|f)|(?:[\-\+]*\_))</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Special case: pcall</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
				<key>name</key>
					<string>command.z80</string>
				</dict>
				<key>2</key>
				<dict>
				<key>name</key>
					<string>label.z80</string>
				</dict>
			</dict>
			<key>match</key>
				<string>(?i)(?&lt;=\s|:)(pcall)\s+((?:[a-zA-Z_.@$][a-zA-Z_.0-9]*)|[0-9]+(?:b|f)|(?:[\-\+]*\_))</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Special case: djnz</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
				<key>name</key>
					<string>command.z80</string>
				</dict>
				<key>2</key>
				<dict>
				<key>name</key>
					<string>label.z80</string>
				</dict>
			</dict>
			<key>match</key>
				<string>(?i)(?&lt;=\s|:)(djnz)\s+((?:[a-zA-Z_.@$][a-zA-Z_.0-9]*)|[0-9]+(?:b|f)|(?:[\-\+]*\_))</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Special case: conditional ret</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
				<key>name</key>
					<string>command.z80</string>
				</dict>
				<key>2</key>
				<dict>
				<key>name</key>
					<string>flag.z80</string>
				</dict>
			</dict>
			<key>match</key>
				<string>(?i)(?&lt;=\s|:)(ret)(?:\s+(z|nz|c|nc|po|pe|p|m))?(?=\s|:|;|$)</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Special case: include</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
				<key>name</key>
					<string>macro.z80</string>
				</dict>
				<key>2</key>
				<dict>
				<key>name</key>
					<string>file.name.z80</string>
				</dict>
			</dict>
			<key>match</key>
				<string>(?i)(?&lt;=\s|^)(\#include)\s+(\"[^\"]+\"|[^;\s\"]+)</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Special case: echo > file</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
				<key>name</key>
					<string>directive.z80</string>
				</dict>
				<key>2</key>
				<dict>
				<key>name</key>
					<string>operator.z80</string>
				</dict>
				<key>3</key>
				<dict>
				<key>name</key>
					<string>file.name.z80</string>
				</dict>
			</dict>
			<key>match</key>
				<string>(?i)(\.echo)\s+(&gt;{1,2})\s+([^;\s]+)</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Special case: log > level</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
				<key>name</key>
					<string>directive.z80</string>
				</dict>
				<key>2</key>
				<dict>
				<key>name</key>
					<string>operator.z80</string>
				</dict>
				<key>3</key>
				<dict>
				<key>name</key>
					<string>file.name.z80</string>
				</dict>
			</dict>
			<key>match</key>
				<string>(?i)(\.log)\s+(&gt;)\s+([^;\s]+)</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Number (hex, bin, dec)</string>
			<key>match</key>
				<string>(?i)(%[01]+\b)|(\b[01]+b\b)|((#|\$)[0-9a-f]+\b)|(\b([0-9]+|0x[0-9a-f]+|[0-9][0-9a-f]*h)\b)</string>
			<key>name</key>
				<string>number.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Bit operator</string>
			<key>match</key>
				<string>(?&lt;=\s)([\&amp;\|]{1,2}|[\&lt;\&gt;]{2})(?=\s)</string>
			<key>name</key>
				<string>operator.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Reusable label</string>
			<key>match</key>
				<string>(?&lt;=\s)[\-\+]*_\b</string>
			<key>name</key>
				<string>label.definition.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Here label</string>
			<key>match</key>
				<string>\$</string>
			<key>name</key>
				<string>label.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Z80 commands</string>
			<key>match</key>
				<string>(?i)(?&lt;=\s|:)(adc|add|and|bit|call|ccf|cp|cpl|cpd|cpdr|cpi|cpir|daa|dec|di|djnz|ei|ex|exx|halt|im|in|inc|ind|indr|inf|ini|inir|jp|jr|ld|ldd|lddr|ldi|ldir|neg|nop|exx|or|otdr|otir|out|outd|outi|pop|push|res|ret|reti|retn|rl|rla|rlc|rlca|rld|rr|rra|rrc|rrca|rrd|rst|sbc|scf|set|sla|sli|sll|sra|srl|sub|xor)(?=\s|:|$)</string>
			<key>name</key>
				<string>command.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>8 bit register set</string>
			<key>match</key>
				<string>(?i)\b(a|b|c|d|e|h|l|i|r|xl|lx|xh|hx|ixl|ixh|yl|ly|yh|hy|iyl|iyh)\b</string>
			<key>name</key>
				<string>register.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>16 bit register set</string>
			<key>match</key>
				<string>(?i)(\baf')|(\b(af|bc|de|hl|sp|ix|iy)\b)</string>
			<key>name</key>
				<string>register.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>on / off / check</string>
			<key>match</key>
				<string>(?i)(?&lt;=\.)(on|off|check)\b</string>
			<key>name</key>
				<string>number.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Directive</string>
			<key>match</key>
				<string>(?i)(?&lt;=\s|^)(\.[a-z0-9_]+\b)</string>
			<key>name</key>
				<string>directive.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Macro</string>
			<key>match</key>
				<string>(?i)(?&lt;=\s|^)(\#[a-z0-9_]+\b)</string>
			<key>name</key>
				<string>macro.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Label</string>
			<key>match</key>
				<string>^(([a-zA-Z_.@][a-zA-Z_.0-9]*)|[0-9]+)(?=\s|:|=|$)</string>
			<key>name</key>
				<string>label.definition.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>TXT labels</string>
			<key>match</key>
				<string>(?i)\b(txt\.)[a-z0-9_\.]+\b</string>
			<key>name</key>
				<string>label.txt.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>GFX labels</string>
			<key>match</key>
				<string>(?i)\b(gfx\.)[a-z0-9_\.]+\b</string>
			<key>name</key>
				<string>label.gfx.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>FunkLibrary extra functions</string>
			<key>match</key>
				<string>(?i)(?&lt;!\.)\b(clear|update|invert|gfx|gfxS|gfxL|putS|putL|rect|print|text|anykey|quit|wait|debug|deref|toHexChar|shuffle|random)\b</string>
			<key>name</key>
				<string>function.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>FunkLibrary extra commands</string>
			<key>match</key>
				<string>(?i)(?&lt;!\.)\b(bcall|pcall|getkey|fill|line|block|textinverse|textonbuf|bigfont|probe|pen|get)\b</string>
			<key>name</key>
				<string>command.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>FunkLibrary constant</string>
			<key>match</key>
				<string>(?i)\b(true|false|white|black|byte|word|addr|tuple|oneByte|nibble|twoByte|small|big)\b</string>
			<key>name</key>
				<string>constant.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Common addresses</string>
			<key>match</key>
				<string>(?i)\b(pencol|penrow|curcol|currow|gbuf)\b</string>
			<key>name</key>
				<string>address.common.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Getkey (sk, di) constants</string>
			<key>match</key>
				<string>(?i)\b((sk|di)[^;\s\.]+)\b</string>
			<key>name</key>
				<string>constant.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Boolean constant</string>
			<key>match</key>
				<string>(?i)\b(true|false)\b</string>
			<key>name</key>
				<string>constant.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Function</string>
			<key>match</key>
				<string>(?i)\b([a-z0-9_\.]+\s*(?=\())</string>
			<key>name</key>
				<string>function.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Parameter</string>
			<key>match</key>
				<string>(?i)(?&lt;!^)\b(\_[a-z0-9_]+\b)</string>
			<key>name</key>
				<string>parameter.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Comment line</string>
			<key>match</key>
				<string>;.*</string>
			<key>name</key>
				<string>comment.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Single-line string</string>
			<key>match</key>
				<string>'(\\\'|[^'])*'</string>
			<key>name</key>
				<string>string.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>Single-line string</string>
			<key>match</key>
				<string>"(\\\"|[^"])*"</string>
			<key>name</key>
				<string>string.z80</string>
		</dict>
		<dict>
			<key>comment</key>
				<string>DEFINE_CONSTANT</string>
			<key>match</key>
				<string>\b([A-Z_]+[A-Z0-9_]*\b)</string>
			<key>name</key>
				<string>constant.z80</string>
		</dict>
	</array>
	<key>scopeName</key>
		<string>source.z80asm-ti</string>
	<key>uuid</key>
		<string>386d4df1-525e-4760-b6c0-6c97220d3211</string>
</dict>
</plist>
